"use strict";const io=require("socket.io-client"),SentianceFirehose=function(){let e,t,n=1e3,i=!1;const o=function(t,n,i,o){if(!t)throw new Error("No app id configured");if(!n)throw new Error("No stream definition id configured");if(!i)throw new Error("No bearer token configured");if(!e)throw new Error("No data handler configured");s(t,n,i,o)},r=function(e,t,i,r){n*=2,setTimeout(function(){o(e,t,i,r)},n)},s=function(e,t,n,o){const s=new XMLHttpRequest,a={query:"        mutation($app_id: String!, $stream_definition_id: String!, $user_ids: [String]) {          createSubscription(app_id:$app_id, stream_definition_id: $stream_definition_id, user_ids: $user_ids) {            id            token          }        }      ",variables:{app_id:e,stream_definition_id:t,user_ids:o||null}};s.open("POST",`https://${i?"preprod-":""}api.sentiance.com/v2/gql`,!0),s.setRequestHeader("Content-Type","application/json"),s.setRequestHeader("Authorization","Bearer "+n),s.onreadystatechange=function(){if(4===s.readyState)if(200===s.status){const i=JSON.parse(s.responseText);if(i.data&&i.data.createSubscription){const e=i.data.createSubscription.id,t=i.data.createSubscription.token;c(e,t)}else r(e,t,n,o)}else r(e,t,n,o)},s.send(JSON.stringify(a))},c=function(n,o){(t=io(`https://${i?"preprod-":""}firehose.sentiance.com/`)).on("connect",function(){a(t,n,o)}),t.on("data",function(t){const n=JSON.parse(t);e(n.data,n.errors,n.metadata)}),t.on("disconnect",function(){}),t.on("error",function(e){})},a=function(e,t,n){const i={id:t,token:n};e.emit("subscribe-v1",i)};return{connect:function(e,t,n,r,s){i=s,setTimeout(o(e,t,n,r))},disconnect:function(){t&&t.connected&&t.disconnect()},onData:function(t){e=t}}}();module.exports=SentianceFirehose;